import{o as r,c as a,k as s,e as t,q as c,s as n,B as l}from"../modules/vue-D5_ZBoNf.js";import{I as m}from"./default-DN8gmhz2.js";import{u,f as i}from"./context-DTFQhE-c.js";import"../index-ZUiqYS01.js";import"../modules/shiki-BohBD6rP.js";const w={__name:"23",setup(p){const{$slidev:k,$nav:f,$clicksContext:C,$clicks:x,$page:d,$renderContext:_,$frontmatter:o}=u();return($,e)=>(r(),a(m,c(n(l(i)(l(o),22))),{default:s(()=>e[0]||(e[0]=[t("h2",null,"Clock",-1),t("p",null,"clock 可以认为是一个从零开始递增的计数器，他有两种更新方式",-1),t("ul",null,[t("li",null,"自更新: localClock += 1"),t("li",null,"当接收到远程事件时: localClock = max(localClock, remoteClock) + 1")],-1),t("p",null,"这种机制看似简单，但实际上使我们获得了数学上性质良好的全序结构。这意味着只要再配合比较 clientID 的大小，即可令任意两个 item 之间均可对比获得逻辑上的先后关系。",-1),t("img",{"w-xl":"",src:"https://raw.githubusercontent.com/Deuscx/pic/master/20230624173827.png"},null,-1),t("p",null,"当用户依次输入 ABC 时，会为此产生 3 个 Item，这对于大文件来说是非常吃内存的，但为了能解决并发冲突这里面的元数据信息又是需要保留的。但仔细观察可以发现这 3 个 Item 是连续的，Yjs 内部对其就做了一些优化。通过字符偏移重新优化成了一个 Item 对象",-1)])),_:1},16))}};export{w as default};
