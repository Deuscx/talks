import{_ as O}from"./slidev/VClicks-BQCrIMrP.js";import{d as R,o as l,b as a,F as k,ae as v,i as p,e as t,x as i,c as B,k as m,a7 as o,l as r,q as $,s as g,B as f}from"./modules/vue-D5_ZBoNf.js";import{u as D,f as w}from"./slidev/context-DTFQhE-c.js";import{I as C}from"./slidev/default-DN8gmhz2.js";import"./index-ZUiqYS01.js";import"./modules/shiki-BohBD6rP.js";const y={class:"flex"},N={class:"text-gray"},P=R({__name:"WordIndex",props:{deleted:{default:[]},added:{default:[]},word:{default:""},startIndex:{default:0}},setup(I){return D(),(s,W)=>(l(),a("div",y,[(l(!0),a(k,null,v(s.word,(u,n)=>(l(),a("div",{key:n,class:p([{"text-red":s.deleted.includes(n+s.startIndex),"text-cyan":s.added.includes(n+s.startIndex)}])},[t("div",{class:p([{"decoration-line-through":s.deleted.includes(n+s.startIndex)}])},i(u),3),t("div",N,i(n+s.startIndex),1)],2))),128))]))}}),j={__name:"8",setup(I){const{$slidev:s,$nav:W,$clicksContext:u,$clicks:n,$page:S,$renderContext:T,$frontmatter:L}=D();return(V,e)=>{const d=P,x=O;return l(),B(C,$(g(f(w)(f(L),7))),{default:m(()=>[e[10]||(e[10]=t("h2",null,"脏路径问题",-1)),t("p",null,[e[0]||(e[0]=o("原始数据： ")),r(d,{word:"WORD"})]),t("p",null,[e[1]||(e[1]=o("用户A在索引3后面添加")),e[2]||(e[2]=t("code",null,"L",-1)),e[3]||(e[3]=o()),e[4]||(e[4]=t("code",null,"Insert(3,L)",-1)),e[5]||(e[5]=o()),r(d,{word:"WORLD",added:[3]})]),t("p",null,[e[6]||(e[6]=o("用户B在删除了索引2的字符 ")),e[7]||(e[7]=t("code",null,"Del(2)",-1)),e[8]||(e[8]=o(" , 也就是R ")),r(d,{word:"WORD",deleted:[2]})]),r(x,null,{default:m(()=>e[9]||(e[9]=[t("p",null,"当双方将数据分享给对方后",-1),t("p",null,"用户A： WORD → Insert(3, L) → WORLD → Del(2) →WOLD",-1),t("p",null,"用户B: WORD → Del(2) → WOD → INSERT(3,L) →WODL (x)",-1),t("p",null,"用户B先进行的删除操作导致了它后面数据的索引发生变化，那么基于同步过来的操作直接应用就会出现，这种情况称为脏路径问题",-1)])),_:1})]),_:1},16)}}};export{j as default};
